/*console.alert("This is printline for console ");
window.alert("This is popup alert ");

Variable:
1. Declaration : var,let,const
2. Assignment: = 

let age; //declaration
age = 21; //assignment

let f_name = "Shweta"; //can use single quote also
let status_S = true;
console.log("Hello", f_name);
console.log(age + 1);
console.log("Currently enrolled", status_S);

//To change inner html elements this is how it is done
document.getElementById("p1").innerHTML = "Hello " + f_name;
document.getElementById("p2").innerHTML = "You are " + age;
document.getElementById("p3").innerHTML = "You are enrolled " + status_S;

//arithmetic expression
operatior precedence
1.()
2.^
3.* or /
4. +/-

let student = 20;
student = student + 1;
student = student - 1;
student = student * 1;
student = student / 1;
student = student % 1;

console.log(student);

//How to accept user input
//1. Window prompt
let user_name = window.prompt("Whats your name");
console.log(user_name);

//2.With HTML text box
let user_name;// declaration imp
document.getElementById("myButton").onclick = function() {
    user_name = document.getElementById("Name").value;
    console.log(user_name);
}

//Type conversion
To check type of element
typeof x;
x=Number("31.1");
x=String(4.11);
x=Boolean("");

//constants
const pi = 3.14159; //gives errors similar conept to final keyword
let r;
let c;
r = window.prompt("Enter the radius");
r = Number(r);
pi = 6;
c = 2 * pi * r;
console.log("circumference", c);

//math
let x;
let y = 5;
let z = 9;
let maximum;
let minimum;
//x = Math.round(x);
//x = Math.floor(x);
//x = Math.ceil(x);
//x = Math.pow(x, 2);
//x = Math.sqrt(x);
//x = Math.abs(x);
x = Math.PI;
maximum = Math.max(x, y, z);
minimum = Math.min(x, y, z);
console.log(maximum);
console.log(minimum);
console.log(x)

//Hypotenus
//1.By window alert
let a;
let b;
let c;

a = window.prompt("Enter side a");
a = Number(a);
b = window.prompt("Enter side b");
b = Number(b);

c = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));
console.log(c);

//2. With html inputs
let a;
let b;
let c;

document.getElementById("myButton").onclick = function() {
    a = document.getElementById("a").value;
    a = Number(a);
    b = document.getElementById("b").value;
    b = Number(b);
    document.getElementById("c_side").innerHTML = "The Hypoteneus is: " + Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));


};

//String methods
let f_name;
let l_name;
let userName = "Bro Code";
let phone_number = "123-456-7890";
// console.log(userName.length);
// console.log(userName.charAt(0));
// console.log(userName.indexOf("o"));
// console.log(userName.lastIndexOf("o"));
// userName = userName.trim();
// userName = userName.toUpperCase();
// userName = userName.toLowerCase();
//slice method

// let f_name = userName.slice(0, 3);
// let l_name = userName.slice(4);

f_name = userName.slice(0, userName.indexOf(" "));
l_name = userName.slice(userName.indexOf(" ") + 1);
phone_number = phone_number.replaceAll("-", "");
console.log(userName);
console.log(f_name);
console.log(l_name);
console.log(phone_number);

//And/or
&&- Both conditions must be true
||- Any condition must be true
!- Negate the condition

//method chaining
let userName = "bro ";
let letter = userName.charAt(0).toUpperCase().trim();
console.log(letter);

//if statement
let age =18;
if(age>=18){
    console.log("You are adult");
}
else if(age<0){
    console.log("You are not born);
}
else{
    console.log("You are child");
}

//switch
let grade="x";
switch(grade){
    case="A":
        console.log("You did great");
    break;
    case="B":
        console.log("You did great");
    break;
    case="C":
        console.log("You did ok");
    break;
    case="D":
        console.log("You did bad");
    break;
    case="F":
        console.log("You did bad");
    break;
    default:
        console.log("Wrong");

    }

//while condition
    let username="";
    while(username==""){
        username=window.prompt("Enter your name");
    }

    //for condition
    break will take out of whole loop 
    continue will skip that iteration
    for(let i=0;i<10;i++){
        console.log(i);
    }

//Ternery operator:
    condition? expression_if condition_true : expression_if condition_false;
    let age = 18;
     let ans = checkage(age);
    function checkage(age) {
    return age >= 18 ? true: false;
     }
    console.log(ans);

//template literal [similar to string literal]
let username = window.prompt("Enter your name");
let age = window.prompt("Enter your age");
let text = `Hi ${username}'<br>
'You are ${ age } years old`;
document.getElementById('a').innerHTML = text;

//toLocaleString()
let myNum = 123456.789;
//myNum = myNum.toLocaleString("en-US");
//myNum = myNum.toLocaleString("de-DE");

// myNum= myNum.toLocaleString("en-US",{style: "currency",currency:"USD"})
//myNum= myNum.toLocaleString("hi-IN",{style: "currency",currency:"INR"})

//myNum = myNum.toLocaleString(undefined, { style: "percent" });
//myNum = myNum.toLocaleString(undefined, { style: "unit", unit: "celsius" });


console.log(myNum);


//array
let fruit = ["apple", "orange", "banana"];
//console.log(fruit);
console.log(fruit[0][0]);
fruit.push("lemon");//add element
fruit.pop();//adds last element
fruit.unshift("mango");//add elemt in beggining
fruit.shift();//remove element from beginning
console.log(fruit);

let length = fruit.length;
let index = fruit.indexOf("orange");
//iterating array
let prices = [5, 10, 15, 20];
for (let i = 0; i < prices.length; i += 1){
    console.log(prices[i]);
}
//sorting array
fruits = fruits.sort();
fruits = fruits.sort().reverse();
let fruits = ["apple", "banana", "orange", "chikko", "mango"];
let vegetable = ["carrots", "onions", "potato", "tomato"];
let cereals = ["moong", "tur", "baajra"];
let grocery = [fruits, vegetable, cereals];
for (let list of grocery) {
    console.log(list);
}

//spread operator = ...
fruits.push(...vegetable);
console.log(fruits)

//use of rest parameter ...
let a = 1;
let b = 2;
let c = 4;
let d = 5;
console.log(sum(a, b, c, d));
function sum(...numbers) {
    let total = 0;
    for (let number of numbers) {
        total+=number
    }
    return total
}

//callback = function passed as an argument to another function
sum(2, 3, displayDOM);
function sum(x, y,callBack_f) {
    let result = x + y;
    callBack_f(result);
}
function displayConsole(output) {
    console.log(output);
}
function displayDOM(output) {
    document.getElementById("a").innerHTML = output;
}

//array.forEach()
let student = ["acv", "bxz", "cpu"];
student.forEach(capitalize);
student.forEach(print);
function capitalize(element, index, array) {
    array[index] = element[0].toUpperCase() + element.substring(1);
}
function print(element) {
    console.log(element);
}

//array.map()
let number = [1, 2, 3, 4, 5];
let squares = number.map(square);

squares.forEach(print);

function square(element) {
    return Math.pow(element, 2);
}
function print(element) {
    console.log(element);
}

//array.filter()

let ages = [18, 16, 21, 17, 19, 19];
let adults = ages.filter(check_age);
adults.forEach(print);
function check_age(element) {
    return element >= 18;
}
function print(element) {
    console.log(element);
}


//array.reduce()

let prices = [5, 10, 15, 20, 25];
let total = prices.reduce(checkout);
console.log(total);
function checkout(total, element) {
    return total + element;
}

//anaonymous function || function expression

const greet = function () {
    console.log("Hello !");
}
greet();


//arrow function ---compact alternative to traditional function
const greet = (user_name) => console.log("Hello !"+user_name);
greet("s");

const percent = (x, y) => x / y * 100;

console.log(percent(80, 150));


//Map ----somewhat like dictionary

const store = new Map([
    ["t-shirt", 20],
    ["jeans", 30],
    ["socks", 10],
    ["tie", 50]
]);
let shoppingCart = 0;
shoppingCart += store.get("t-shirt");
shoppingCart += store.get("jeans");
console.log(shoppingCart);

store.set("hat", 40);

store.delete("hat");

store.has("hat");

console.log(store.size);

store.forEach((value, key) => console.log(`${key} $${value}`));
==================================================================================
//setTimeout()= invokes function after no of miliseconds
// its an asynchronous functions does not pause execution of the function

let item = 'Block-chain';
let price = 2000;
let timer1=setTimeout(firstMessage, 10,item,price);
let timer2=setTimeout(secondMessage, 3000);
let timer3=setTimeout(thirdMessage,6000)

function firstMessage(item,price) {
    alert(`Buy this ${item} for $${price}!`);
}
function secondMessage() {
    alert(`2...Buy this course for $500!`);
}
function thirdMessage() {
    alert(`3....Buy this course for $500!`);
}
document.getElementById("mybtn").onclick = function () {
    clearTimeout(timer1);
    clearTimeout(timer2);
    clearTimeout(timer3);
    alert(`Thanks for buying`);
}
===============================================================================================
//setInterval
let count = 0;
let max = window.prompt("Count upto what");
max = Number(max);

const myTimer = setInterval(countUp, 1000,max);

function countUp() {
    count += 1;
    console.log(count);
    if (count >= max) {
        clearInterval(myTimer);
    }
}
========================================================================================================
//Date object

let date = new Date();
//date = date.toLocaleString();
// let year = date.getFullYear();
// let dayOfMonth = date.getDate();
// let dayOfWeek = date.getDay();
// let month = date.getMonth();
// let hour = date.getHours();
// let minute = date.getMinutes();
// let second = date.getSeconds();


//date.setFullYear(2024);
document.getElementById("a").innerHTML = formatDate(date);

function formatDate(date) {
    let year = date.getFullYear();
    let month = date.getMonth();
    let day = date.getDay();
    return `${year}/${month}/${day}`
}

==================================================================================================================
//console.time()
//start
console.time("ResponseTime");

//asynchronous function
setTimeout(() => console.log("Hello!"), 3000);

//alert("Click the ok button");

//end
console.timeEnd("ResponseTime");

======================================================================================================================
#######################################################################################################################
//promises-object that encapsulates the result of an asynchronous operation
//         let asynchronous method return value like synchronous methods
//         "I promise to return something in future"

const promise = new Promise((resolve, reject) => {
    let fileLoaded = false;

    if (fileLoaded) {
        resolve("File loaded");
    }
    else {
        reject("File not loaded");
    }
});

promise.then(value => console.log(value))
    .catch(error => console.log(error));


-------------------------------------------------------------------------------------------------------------------------------------
//async -makes function return promise
async function loadFile() {
    let fileLoaded = false;

    if (fileLoaded) {
        return("File loaded");
    }
    else {
        throw("File not loaded");
    }
}
loadFile().then(value => console.log(value))
    .catch(error => console.log(error));
---------------------------------------------------------------------------------------------------------------------------
const wait = time=>new Promise(resolve => {
    setTimeout(resolve, time);
});

wait(3000).then(()=> console.log("Thanks for waiting!"));


======================================================================================================================
#######################################################################################################################
//await- makes an async function wait for a promise

async function loadFile() {
    let fileLoaded = false;

    if (fileLoaded) {
        return("File loaded");
    }
    else {
        throw("File not loaded");
    }
}

async function startProcesses() {
    try {
        let message = await loadFile();
        console.log(message);
    } catch (error) {
        console.log(error);
    }
}
startProcesses();
======================================================================================================================
#######################################################################################################################





